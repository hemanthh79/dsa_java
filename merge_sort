package mergesort;

import java.util.Arrays;

public class mergeSort {
	public static void main(String[] args)
	{
		int[] arr = {4,5,9,2,6};
		int[] res = sorted(arr);
		System.out.println(Arrays.toString(res));
	}

	public static int[] sorted(int[] arr) {
		if(arr.length <= 1)
			return arr;
		int mid = arr.length/2;
		int[] left = sorted(Arrays.copyOfRange(arr, 0, mid));
		int[] right = sorted(Arrays.copyOfRange(arr, mid, arr.length));
		
		int[] res = merge(left,right);
		return res;
	}

	private static int[] merge(int[] first, int[] second) {
		int[] mix = new int[first.length + second.length]; 
		int i = 0;
		int j = 0;
		int k = 0;
		while(i < first.length && j < second.length)
		{
			if(first[i] <= second[j])
			{
				mix[k] = first[i++];
			}
			else
			{
				mix[k] = second[j++];
			}
			k++;
		}
	    while (i < first.length) {
	        mix[k++] = first[i++];
	    }

	    // Copy remaining elements from right if any
	    while (j < second.length) {
	        mix[k++] = second[j++];
	    }
		return mix;
	}
}
